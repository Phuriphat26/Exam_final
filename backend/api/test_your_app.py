import pytest
from flask import Flask
# ‚úÖ 1. (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç) ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô 'your_email_module' ‡πÄ‡∏õ‡πá‡∏ô 'email_utils'
from email_service import mail, send_notification_email 
from flask_mail import Message

# (Setup App ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ó‡∏™)
@pytest.fixture
def app():
    app = Flask(__name__)
    app.config['TESTING'] = True
    app.config['MAIL_SENDER'] = 'test@sender.com'
    mail.init_app(app)
    return app

def test_send_notification_email(app, mocker):
    """
    ‡πÄ‡∏ó‡∏™‡∏ß‡πà‡∏≤‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô send_notification_email
    ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å mail.send ‡∏î‡πâ‡∏ß‡∏¢ Message ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    """
    
    # ‚úÖ 2. (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç) ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô 'your_email_module' ‡πÄ‡∏õ‡πá‡∏ô 'email_utils'
    mock_send = mocker.patch('email_service.mail.send')

    # (‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
    with app.app_context():
        send_notification_email(
            subject="‡∏ß‡∏¥‡∏ä‡∏≤‡∏ü‡∏¥‡∏™‡∏¥‡∏Å‡∏™‡πå",
            recipient_email="67310003@go.buu.ac.th"
        )

    mock_send.assert_called_once()
    sent_msg = mock_send.call_args[0][0] 
    assert isinstance(sent_msg, Message)
    assert sent_msg.subject == "üîî ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡πÑ‡∏î‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡πà‡∏≤‡∏ô ‡∏ß‡∏¥‡∏ä‡∏≤‡∏ü‡∏¥‡∏™‡∏¥‡∏Å‡∏™‡πå ‡πÅ‡∏•‡πâ‡∏ß!"
    assert sent_msg.recipients == ["67310003@go.buu.ac.th"]
    assert "‡∏ß‡∏¥‡∏ä‡∏≤‡∏ü‡∏¥‡∏™‡∏¥‡∏Å‡∏™‡πå" in sent_msg.body